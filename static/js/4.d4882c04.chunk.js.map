{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialogs","props","dialogs","dialogsPage","curDlg","currentDialog","onSetCurDlg","e","dlg","target","textContent","setCurDlg","DialogItem","path","id","className","classes","dialog","to","activeClassName","active","onClick","src","ava","dialog__img","name","dialogsElements","map","Msg","style","outgoing","incoming","msgs","MsgElements","filter","msg","text","out","Messages","messages","EmptyMessagesDiv","noDlg","MessageItems","render","component","messagesElements","newMsg","React","createRef","onSendMsg","msgText","current","value","sendMsg","DialogForm","initialValues","values","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","writeMsg","onSubmit","placeholder","onChange","onBlur","writeMsgText","ref","type","writeMsgBtn","disabled","JSON","stringify","commonWrap","dialogsWrap","messagesWrap","mapStatetoPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","sendMessageAC","setCurrentDialogAC","Component","RedirectComponent","this"],"mappings":"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","file":"static/js/4.d4882c04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonWrap\":\"Dialogs_commonWrap__2vYTk\",\"dialogsWrap\":\"Dialogs_dialogsWrap__BSdra\",\"dialogs\":\"Dialogs_dialogs__1I3Ut\",\"dialog\":\"Dialogs_dialog__2ahLy\",\"active\":\"Dialogs_active__3xG4Q\",\"dialog__img\":\"Dialogs_dialog__img__x1-Fj\",\"messagesWrap\":\"Dialogs_messagesWrap__2VqBb\",\"writeMsg\":\"Dialogs_writeMsg__KqPRz\",\"writeMsgText\":\"Dialogs_writeMsgText__2eYY2\",\"writeMsgBtn\":\"Dialogs_writeMsgBtn__sFsG3\",\"messages\":\"Dialogs_messages__3rDHn\",\"outgoing\":\"Dialogs_outgoing__1p9tq\",\"incoming\":\"Dialogs_incoming__VBKpg\",\"noDlg\":\"Dialogs_noDlg__25ZAv\"};","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport { Redirect, Route, NavLink} from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tlet dialogs = props.dialogsPage;\r\n\tlet curDlg = props.currentDialog;\r\n\r\n\r\n\tlet onSetCurDlg = (e) => {\r\n\t\tlet dlg = e.target.textContent;\r\n\t\tprops.setCurDlg(dlg);\r\n\t}\r\n\r\n\r\n\tconst DialogItem = (props) => {\r\n\t\tlet path = `/dialogs/${props.id}`;\r\n\r\n\t\treturn (\r\n\t\t\t<li className={classes.dialog}>\r\n\t\t\t\t<NavLink to={path} activeClassName={classes.active} onClick={onSetCurDlg}>\r\n\t\t\t\t\t<img src={props.ava} className={classes.dialog__img}/>\r\n\t\t\t\t\t{props.name}\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\r\n\t// вместо currentDialog фильтровать по айдишнику переписки?\r\n\t// при обнолении страницы активкласс сохраняется, а диалоговое окно очищается\r\n\t// сохранять currentDialog в локал сторадж?\r\n\r\n\tlet dialogsElements = dialogs\r\n\t\t.map(dialog => <DialogItem name={dialog.name} id={dialog.id} ava={dialog.ava}/>)\r\n\r\n\r\n\tlet Msg = (props) => {\r\n\t\tlet style = props.style ? classes.outgoing : classes.incoming;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={style}>{props.msgs}</div>\r\n\t\t)\r\n\t}\r\n\r\n\r\n\t\r\n\tlet MsgElements = dialogs\r\n\t\t.filter(dialog => dialog.name == curDlg)\r\n\t\t.map(dialog => dialog.msgs.map(msg => <Msg msgs={msg.text} style={msg.out}/>))\r\n\r\n\t\r\n\tlet Messages = () => {\r\n\t\treturn (\r\n\t\t\t\t<div className={classes.messages}>\r\n\t\t\t\t\t{MsgElements}\r\n\t\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tlet EmptyMessagesDiv = () => {\r\n\t\treturn (\r\n\t\t\t<div className={classes.messages}>\r\n\t\t\t\t<div className={classes.noDlg}>\r\n\t\t\t\t\t<p>Диалог не выбран</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\r\n\tlet MessageItems = (props) => {\r\n\t\tlet path = `/dialogs/${props.path}`;\r\n\t\tlet component = () => props.component;\r\n\r\n\t\treturn (\r\n\t\t\t<Route path={path} render={component}\t/>\r\n\t\t)\r\n\t}\r\n\r\n\tlet messagesElements = !curDlg ? <EmptyMessagesDiv/>\r\n\t\t: dialogs.map(dialog => <MessageItems path={dialog.id} component={<Messages />} />)\r\n\r\n\t\r\n\r\n\tlet newMsg = React.createRef();\r\n\r\n\tlet onSendMsg = () => {\r\n\t\tlet msgText = newMsg.current.value;\r\n\r\n\t\tif (curDlg) {\r\n\t\t\tprops.sendMsg(msgText)\r\n\t\t}\r\n\r\n\t\tnewMsg.current.value = '';\r\n\t}\r\n\r\n\r\n\r\n\tconst DialogForm = (props) => {\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ msgText: '' }}\r\n\t\t\t>\r\n\t\t\t\t{({\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t\thandleBlur,\r\n\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\tisSubmitting\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<form className={classes.writeMsg} onSubmit={handleSubmit} >\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tname={'msgText'}\r\n\t\t\t\t\t\t\tid={'msgText'}\r\n\t\t\t\t\t\t\tplaceholder={\"write message text\"}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\tvalue={values.msgText}\r\n\t\t\t\t\t\t\t// className={touched.name && errors.name ? classes.test : null}\r\n\t\t\t\t\t\t\tclassName={classes.writeMsgText}\r\n\t\t\t\t\t\t\tref={newMsg}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button type={'submit'} className={classes.writeMsgBtn}\r\n\t\t\t\t\t\t\tdisabled={isSubmitting || JSON.stringify(values.msgText) == `\"\"`}\r\n\t\t\t\t\t\t\tonClick={onSendMsg}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t)}\r\n\t\t\t\r\n\t\t\t</Formik>\r\n\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.commonWrap}>\r\n\t\t\t<div className={classes.dialogsWrap}>\r\n\t\t\t\t<ul className={classes.dialogs}>\r\n\t\t\t\t\t{dialogsElements}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.messagesWrap}>\r\n\t\t\t\t{messagesElements}\r\n\t\t\t\t<DialogForm/>\r\n\t\t\t</div>\r\n\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStatetoPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) return <Redirect to='/login' />\r\n\t\t\treturn <Component {...this.props}/>\r\n\t\t}\r\n\t}\r\n\r\n\tlet connectAuthRedirectComponent = connect(mapStatetoPropsForRedirect)(RedirectComponent)\r\n\treturn connectAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport { sendMessageAC, updateNewMsgTextAC, setCurrentDialogAC } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage.dialogs,\r\n\t\tcurrentDialog: state.dialogsPage.currentDialog,\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMsg: (msgText) => {\r\n\t\t\tdispatch(sendMessageAC(msgText))\r\n\t\t},\r\n\t\tsetCurDlg: (dialog) => {\r\n\t\t\tdispatch(setCurrentDialogAC(dialog))\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);\r\n\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","item__imgAndText","item__img","src","item__msg","message","item__likes","likeSymbol","likes","MyPosts","console","log","posts","profilePage","PostItem","likesBlock","postsElements","reverse","map","post","msg","newPost","React","createRef","onAddPost","postText","current","value","addPost","PostForm","initialValues","values","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","onSubmit","name","id","placeholder","onChange","onBlur","textarea","ref","type","addPostBtn","disabled","JSON","stringify","onClick","content","addNP","MyPostsContainer","connect","state","dispatch","action","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","e","currentTarget","updateStatus","Profile","profile","profile__content","content__img","userAva","photos","large","MishaAva","aboutMe","fullName","lookingForAJob","store","Preloader","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserAccountById","getStatus","PureComponent","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.37c605fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__content\":\"Profile_profile__content__23Xr3\",\"content__img\":\"Profile_content__img__3pl3L\",\"userAva\":\"Profile_userAva__mqhUE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"MyPosts_addPost__2aGMO\",\"addNP\":\"MyPosts_addNP__1XqEa\",\"newPost\":\"MyPosts_newPost__2z_uy\",\"textarea\":\"MyPosts_textarea__J-kFR\",\"addPostBtn\":\"MyPosts_addPostBtn__10c3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3sC9V\",\"item__imgAndText\":\"Post_item__imgAndText__zBgHD\",\"item__img\":\"Post_item__img__2mrai\",\"item__msg\":\"Post_item__msg__3Kp2m\",\"likeSymbol\":\"Post_likeSymbol__1WD68\",\"item__likes\":\"Post_item__likes__18qOt\"};","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\t// if (!props.likes) props.likes ='like';\r\n\r\n\treturn (\r\n\t\t<div className={classes.item}>\r\n\t\t\t<div className={classes.item__imgAndText}>\r\n\t\t\t\t<img className={classes.item__img} src=\"https://www.darkside.ru/band/1732/cover/8922.jpg\" />\r\n\t\t\t\t<div className={classes.item__msg}>\r\n\t\t\t\t\t{props.message}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className={classes.item__likes}><span className={classes.likeSymbol}>&#9829;</span> {props.likes}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Formik } from 'formik';\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\t\r\n\tconsole.log('RENDER', props);\r\n\tlet posts = props.profilePage.posts;\r\n\r\n\tconst PostItem = (props) => {\r\n\t\tlet likesBlock = props.likes ? props.likes : 'like';\r\n\r\n\t\treturn (\r\n\t\t\t<Post message={props.message} likes={likesBlock} />\r\n\t\t)\r\n\t}\r\n\r\n\tlet postsElements = posts\r\n\t\t.reverse()\r\n\t\t.map(post => <PostItem message={post.msg} likes={post.likes} />)\r\n\r\n\t\t\r\n\tlet newPost = React.createRef();\r\n\t\r\n\tlet onAddPost = () => {\r\n\t\tlet postText = newPost.current.value;\r\n\t\tprops.addPost(postText);\r\n\t}\r\n\r\n\r\n\r\n\tconst PostForm = (props) => {\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ postText: '' }}\r\n\t\t\t>\r\n\t\t\t\t{({\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t\thandleBlur,\r\n\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\tisSubmitting\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<form className={classes.addPost} onSubmit={handleSubmit} >\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tname={'postText'}\r\n\t\t\t\t\t\t\tid={'postText'}\r\n\t\t\t\t\t\t\tplaceholder={\"write some text\"}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\tvalue={values.postText}\r\n\t\t\t\t\t\t\t// className={touched.name && errors.name ? classes.test : null}\r\n\t\t\t\t\t\t\tclassName={classes.textarea}\r\n\t\t\t\t\t\t\tref={newPost}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button type={'submit'} className={classes.addPostBtn}\r\n\t\t\t\t\t\t\tdisabled={isSubmitting || JSON.stringify(values.postText) == `\"\"`}\r\n\t\t\t\t\t\t\tonClick={onAddPost}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tAdd Post\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t)}\r\n\t\t\t\r\n\t\t\t</Formik>\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.content}>\r\n\t\t\t<div>\r\n\t\t\t\t<div className={classes.addNP}>add new post</div>\r\n\t\t\t\t<PostForm/>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.posts}>\r\n\t\t\t\t<h3 className={classes.newPost}>My posts</h3>\r\n\t\t\t\t{postsElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tprofilePage: state.profilePage,\r\n\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (postText) => {\r\n\t\t\tlet action = addPostActionCreator(postText);\r\n\t\t\tdispatch(action)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [status, setStatus] = useState(props.status);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status)\r\n\t}, [props.status])\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t}\r\n\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tprops.updateStatus(status);\r\n\t}\r\n\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode && \r\n\t\t\t\t<div>\r\n\t\t\t\t<span onDoubleClick={activateEditMode}>{props.status || 'no status'}</span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t<input autoFocus={true} onChange={onStatusChange} onBlur={deactivateEditMode} value={status}/>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n} \r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport Preloader from '../common/Preloader'\r\nimport MishaAva from '../Users/img/MishaAva.jpg';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\t// debugger\r\n\tif (!props.profile) return <Preloader />\r\n\r\n\treturn (\r\n\t\t<div className={classes.profile__content}>\r\n\t\t\t<img className={classes.content__img} src='https://www.aeroflot.ru/media/aflfiles/by/msq/msq_2.jpg'/>\r\n\t\t\t<img className={classes.userAva} src={props.profile.photos.large ? props.profile.photos.large : MishaAva} />\r\n\t\t\t<ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\t\t\t<div>about user: {props.profile.aboutMe}</div>\r\n\t\t\t<div>full name: {props.profile.fullName}</div>\r\n\t\t\t<div>looking for a job: {props.profile.lookingForAJob? 'yes' : 'no'}</div>\r\n\t\t\t<MyPostsContainer store={props.store}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile;","import React, {PureComponent} from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { setUserProfile, getUserAccountById, getStatus, updateStatus} from '../../redux/profile-reducer';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends PureComponent {\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif (!userId) this.props.history.push('/login')\r\n\t\t}\r\n\t\tthis.props.getUserAccountById(userId)\r\n\t\tthis.props.getStatus(userId);\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t// console.log('RENDER', this.props);\r\n\t\treturn (\r\n\t\t\t<Profile\r\n\t\t\t\t{...this.props}\r\n\t\t\t\tprofile={this.props.profile}\r\n\t\t\t\tstatus={this.props.status}\r\n\t\t\t\tupdateStatus={this.props.updateStatus}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\t\r\n}\r\n\r\nlet mapStatetoProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tauthorizedUserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n\tconnect(mapStatetoProps, { getUserAccountById, getStatus, updateStatus }),\r\n\twithRouter,\r\n\t// withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}